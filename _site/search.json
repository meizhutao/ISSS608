[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "In-class Exercise/Hands-on_Ex06/Hands-on_Ex06-VisTime.html",
    "href": "In-class Exercise/Hands-on_Ex06/Hands-on_Ex06-VisTime.html",
    "title": "Hands-on Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "",
    "text": "By the end of this hands-on exercise you will be able create the followings data visualisation by using R packages:\n\nplotting a calender heatmap by using ggplot2 functions,\nplotting a cycle plot by using ggplot2 function,\nplotting a horizon chart"
  },
  {
    "objectID": "In-class Exercise/Hands-on_Ex06/Hands-on_Ex06-VisTime.html#getting-started",
    "href": "In-class Exercise/Hands-on_Ex06/Hands-on_Ex06-VisTime.html#getting-started",
    "title": "Hands-on Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "Getting Started",
    "text": "Getting Started\n::: callout-info ## Do It Yourself Write a code chunk to check, install and launch the following R packages: scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table and tidyverse.\n\n\nShow the code\npacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, tidyverse, readxl, knitr, data.table)"
  },
  {
    "objectID": "In-class Exercise/Hands-on_Ex06/Hands-on_Ex06-VisTime.html#plotting-calendar-heatmap",
    "href": "In-class Exercise/Hands-on_Ex06/Hands-on_Ex06-VisTime.html#plotting-calendar-heatmap",
    "title": "Hands-on Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "Plotting Calendar Heatmap",
    "text": "Plotting Calendar Heatmap\nIn this section, you will learn how to plot a calender heatmap programmetically by using ggplot2 package.\n\nBy the end of this section, you will be able to:\n\nplot a calender heatmap by using ggplot2 functions and extension,\nto write function using R programming,\nto derive specific date and time related field by using base R and lubridate packages\nto perform data preparation task by using tidyr and dplyr packages.\n\n\nThe Data\nFor the purpose of this hands-on exercise, eventlog.csv file will be used. This data file consists of 199,999 rows of time-series cyber attack records by country.\n\n\nImporting the data\nFirst, you will use the code chunk below to import eventlog.csv file into R environment and called the data frame as attacks.\n\nattacks <- read_csv(\"data/eventlog.csv\")\n\n\n\nExamining the data structure\nIt is always a good practice to examine the imported data frame before further analysis is performed.\nFor example, kable() can be used to review the structure of the imported data frame.\n\nkable(head(attacks))\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\nThere are three columns, namely timestamp, source_country and tz.\n\ntimestamp field stores date-time values in POSIXct format.\nsource_country field stores the source of the attack. It is in ISO 3166-1 alpha-2 country code.\n\ntz field stores time zone of the source IP address.\n\n\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\n\n\nData Preparation\nStep 1: Deriving weekday and hour of day fields\nBefore we can plot the calender heatmap, two new fields namely wkday and hour need to be derived. In this step, we will write a function to perform the task.\n\nmake_hr_wkday <- function(ts, sc, tz) {\n  real_times <- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt <- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n  }\n\nNote: ymd_hms() and hour() are from lubridate package and weekdays() is a base R function.\nStep 2: Deriving the attacks tibble data frame\n\nwkday_levels <- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks <- attacks %>%\n  group_by(tz) %>%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %>% \n  ungroup() %>% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\nNote: Beside extracting the necessary data into attacks data frame, mutate() of dplyr package is used to convert wkday and hour fields into factor so they’ll be ordered when plotting\nTable below shows the tidy tibble table after processing.\n\nkable(head(attacks))\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11\n\n\n\n\n\n\n\nBuilding the Calendar Heatmaps\n\ngrouped <- attacks %>% \n  count(wkday, hour) %>% \n  ungroup() %>%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\n\n\n\nThings to learn from the code chunk: - a tibble data table called grouped is derived by aggregating the attack by wkday and hour fields. - a new field called n is derived by using group_by() and count() functions. - na.omit() is used to exclude missing value. - geom_tile() is used to plot tiles (grids) at each x and y position. color and size arguments are used to specify the border color and line size of the tiles. - theme_tufte() of ggthemes package is used to remove unnecessary chart junk. To learn which visual components of default ggplot2 have been excluded, you are encouraged to comment out this line to examine the default plot. - coord_equal() is used to ensure the plot will have an aspect ratio of 1:1. - scale_fill_gradient() function is used to creates a two colour gradient (low-high).\n\n\n\n\n\nThen we can simply group the count by hour and wkday and plot it, since we know that we have values for every combination there’s no need to further preprocess the data.\n\n\nBuilding Multiple Calendar Heatmaps\nChallenge: Building multiple heatmaps for the top four countries with the highest number of attacks.\n\n\n\nPlotting Multiple Calendar Heatmaps\nStep 1: Deriving attack by country object\nIn order to identify the top 4 countries with the highest number of attacks, you are required to do the followings:\n\ncount the number of attacks by country,\ncalculate the percent of attackes by country, and\nsave the results in a tibble data frame.\n\n\nattacks_by_country <- count(\n  attacks, source_country) %>%\n  mutate(percent = percent(n/sum(n))) %>%\n  arrange(desc(n))\n\nStep 2: Preparing the tidy data frame\nIn this step, you are required to extract the attack records of the top 4 countries from attacks data frame and save the data in a new tibble data frame (i.e. top4_attacks).\n\ntop4 <- attacks_by_country$source_country[1:4]\ntop4_attacks <- attacks %>%\n  filter(source_country %in% top4) %>%\n  count(source_country, wkday, hour) %>%\n  ungroup() %>%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %>%\n  na.omit()\n\n\n\nPlotting Multiple Calendar Heatmaps\nStep 3: Plotting the Multiple Calender Heatmap by using ggplot2 package.\n\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )"
  },
  {
    "objectID": "In-class Exercise/Hands-on_Ex06/Hands-on_Ex06-VisTime.html#cycle-plot",
    "href": "In-class Exercise/Hands-on_Ex06/Hands-on_Ex06-VisTime.html#cycle-plot",
    "title": "Hands-on Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "Cycle Plot",
    "text": "Cycle Plot\nIn this section, you will learn how to plot a cycle plot showing the time-series patterns and trend of visitor arrivals from Vietnam programmatically by using ggplot2 functions.\n\n\nData Preparation\n\nStep 1: Data Import\nFor the purpose of this hands-on exercise, arrivals_by_air.xlsx will be used.\nThe code chunk below imports arrivals_by_air.xlsx by using read_excel() of readxl package and save it as a tibble data frame called air.\n\nair <- read_excel(\"data/arrivals_by_air.xlsx\")\n\n\n\nStep 2: Deriving month and year fields\nNext, two new fields called month and year are derived from Month-Year field.\n\nair$month <- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year <- year(ymd(air$`Month-Year`))\n\n\n\nStep 4: Extracting the target country\nNext, the code chunk below is use to extract data for the target country (i.e. Vietnam)\n\nVietnam <- air %>% \n  select(`Vietnam`, \n         month, \n         year) %>%\n  filter(year >= 2010)\n\n\n\nStep 5: Computing year average arrivals by month\nThe code chunk below uses group_by() and summarise() of dplyr to compute year average arrivals by month.\n\nhline.data <- Vietnam %>% \n  group_by(month) %>%\n  summarise(avgvalue = mean(`Vietnam`))\n\n\n\n\nPlotting the cycle plot\nThe code chunk below is used to plot the cycle plot as shown in Slide 12/23.\n\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\")"
  },
  {
    "objectID": "In-class Exercise/In-class Ex3/In-class Ex3.html",
    "href": "In-class Exercise/In-class Ex3/In-class Ex3.html",
    "title": "In-class Ex3",
    "section": "",
    "text": "Installing and loading R packages\nTwo packages will be installed and loaded. They are tidyverse and ggiraph.\n\npacman::p_load(ggiraph, tidyverse)\n\nImporting data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "In-class Exercise/In-class Ex4/In-class Ex4.html",
    "href": "In-class Exercise/In-class Ex4/In-class Ex4.html",
    "title": "In-Class Ex 4",
    "section": "",
    "text": "pacman::p_load(plotly,DT,ggstatsplot, ggplot2, patchwork,readxl, performance, parameters, see, tidyverse)\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\nplot_ly (data = exam_data,\n              x= ~ENGLISH,\n              y= ~MATHS,\n              color = ~RACE)\n\n\n\n\n\n\nggplot(data= exam_data,\n           aes(x= MATHS,\n               y= ENGLISH))+\n  geom_point(dotsize= 1)+\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\nmy_sum <- exam_data %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.50777 \n    15.69040 \n    1.132357 \n  \n  \n    Indian \n    12 \n    60.66667 \n    23.35237 \n    7.041005 \n  \n  \n    Malay \n    108 \n    57.44444 \n    21.13478 \n    2.043177 \n  \n  \n    Others \n    9 \n    69.66667 \n    10.72381 \n    3.791438 \n  \n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by rac\")\n\n\n\n\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n <- check_normality(model1)\nplot(check_n)"
  },
  {
    "objectID": "In-class Exercise/In-class Ex5/In-class Ex5.html",
    "href": "In-class Exercise/In-class Ex5/In-class Ex5.html",
    "title": "In-class Ex5",
    "section": "",
    "text": "pacman::p_load(corrplot, tidyverse, ggstatsplot)\n\n\nwine <- read_csv(\"data/wine_quality.csv\")\n\nRows: 6497 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): type\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\npairs(wine[,1:11])\n\n\n\n\n\npanel.cor <- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr <- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr <- abs(cor(x, y, use=\"complete.obs\"))\ntxt <- format(c(r, 0.123456789), digits=digits)[1]\ntxt <- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter\n\nWarning in par(usr): argument 1 does not name a graphical parameter"
  },
  {
    "objectID": "In-class Exercise/In-class Ex7/In-class Ex7.html",
    "href": "In-class Exercise/In-class Ex7/In-class Ex7.html",
    "title": "In-class Ex7",
    "section": "",
    "text": "Show the code\npacman::p_load(sf, tmap, tidyverse,ggplot2)\n\n\n\n\nShow the code\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\meizhutao\\ISSS608\\In-class Exercise\\In-class Ex7\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to “ISSS608-Visual Analytics and Applications”\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "[Age-sex pyramid]is an analytical visualisation commonly used by demographers to reveal the structure of population by gender and age group. In this take-home exercise, we will reveal the demographic structure of Singapore at planning area level by using age-sex pyramid method. we are required to display nine selected planning areas on a single view by using [trellis display (also know as small-multiple plot)]."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#load-the-respopagesextod2022.csv-into-tableau-prep-builders.-click-the-check-box-of-use-data-interpreter.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#load-the-respopagesextod2022.csv-into-tableau-prep-builders.-click-the-check-box-of-use-data-interpreter.",
    "title": "Take-home Exercise 1",
    "section": "1. Load the respopagesextod2022.csv into Tableau Prep Builders. Click the check box of ‘Use Data Interpreter’.",
    "text": "1. Load the respopagesextod2022.csv into Tableau Prep Builders. Click the check box of ‘Use Data Interpreter’."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#scan-through-the-data-details-and-change-the-time-from-data-type-number-to-date.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#scan-through-the-data-details-and-change-the-time-from-data-type-number-to-date.",
    "title": "Take-home Exercise 1",
    "section": "2. Scan through the data details and change the “Time” from data type “number” to “date”.",
    "text": "2. Scan through the data details and change the “Time” from data type “number” to “date”."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#create-rows-and-columns-for-33-pyramid.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#create-rows-and-columns-for-33-pyramid.",
    "title": "Take-home Exercise 1",
    "section": "3. Create rows and columns for 3*3 pyramid.",
    "text": "3. Create rows and columns for 3*3 pyramid."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#go-to-the-sheet1-click-the-sex-add-on-calculation-field-for-male-population-and-female-population.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#go-to-the-sheet1-click-the-sex-add-on-calculation-field-for-male-population-and-female-population.",
    "title": "Take-home Exercise 1",
    "section": "4. Go to the sheet1, click the “Sex”, add on calculation field for Male Population and Female Population.",
    "text": "4. Go to the sheet1, click the “Sex”, add on calculation field for Male Population and Female Population."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#group-ages-shown-in-the-following.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#group-ages-shown-in-the-following.",
    "title": "Take-home Exercise 1",
    "section": "5. Group “ages” shown in the following.",
    "text": "5. Group “ages” shown in the following."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#drag-the-data-fields-into-the-columns-and-rows-as-following.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#drag-the-data-fields-into-the-columns-and-rows-as-following.",
    "title": "Take-home Exercise 1",
    "section": "6. Drag the data fields into the columns and rows as following.",
    "text": "6. Drag the data fields into the columns and rows as following."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#change",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#change",
    "title": "Take-home Exercise 1",
    "section": "7. Change",
    "text": "7. Change"
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#filter-the-pa-select-the-top-9-planning-areas-which-have-most-the-population.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#filter-the-pa-select-the-top-9-planning-areas-which-have-most-the-population.",
    "title": "Take-home Exercise 1",
    "section": "8. Filter the PA, select the top 9 planning areas which have most the population.",
    "text": "8. Filter the PA, select the top 9 planning areas which have most the population."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#put-the-pa-into-the-details-under-marksall.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#put-the-pa-into-the-details-under-marksall.",
    "title": "Take-home Exercise 1",
    "section": "9. Put the PA into the details under Marks/All.",
    "text": "9. Put the PA into the details under Marks/All."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#change-the-chart-to-a-pyramid-view-by-editing-the-axis-for-the-female-population-field.-right-click-on-the-axis-for-female-population-field-and-select-edit-axis.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#change-the-chart-to-a-pyramid-view-by-editing-the-axis-for-the-female-population-field.-right-click-on-the-axis-for-female-population-field-and-select-edit-axis.",
    "title": "Take-home Exercise 1",
    "section": "10. Change the chart to a pyramid view by editing the axis for the Female Population field. Right click on the axis for Female Population field and select “Edit Axis”.",
    "text": "10. Change the chart to a pyramid view by editing the axis for the Female Population field. Right click on the axis for Female Population field and select “Edit Axis”.\n ## In the popped up window, under the section “Scale”, tick the check-box for “Reversed” to reverse the axis for the Female Population field."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#change-the-female-bar-color-from-blue-to-red.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#change-the-female-bar-color-from-blue-to-red.",
    "title": "Take-home Exercise 1",
    "section": "10. Change the Female bar color from blue to red.",
    "text": "10. Change the Female bar color from blue to red."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#sort-descending-for-the-age-group.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#sort-descending-for-the-age-group.",
    "title": "Take-home Exercise 1",
    "section": "11. Sort descending for the age group.",
    "text": "11. Sort descending for the age group."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#remove-index-of-rows-by-click-the-show-header-to-make-the-chart-bigger-for-viewing.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#remove-index-of-rows-by-click-the-show-header-to-make-the-chart-bigger-for-viewing.",
    "title": "Take-home Exercise 1",
    "section": "12. Remove index of rows by click the “show header” to make the chart bigger for viewing.",
    "text": "12. Remove index of rows by click the “show header” to make the chart bigger for viewing."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#proper-labeling.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#proper-labeling.",
    "title": "Take-home Exercise 1",
    "section": "13. Proper labeling.",
    "text": "13. Proper labeling."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#drag-the-pa-into-the-label-under-marksall.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#drag-the-pa-into-the-label-under-marksall.",
    "title": "Take-home Exercise 1",
    "section": "Drag the PA into the label under Marks/All.",
    "text": "Drag the PA into the label under Marks/All."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#select-the-following-settings-for-sumfemale-population.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#select-the-following-settings-for-sumfemale-population.",
    "title": "Take-home Exercise 1",
    "section": "Select the following settings for SUM(Female Population).",
    "text": "Select the following settings for SUM(Female Population)."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#drag-the-female-population-to-the-label-under-female-population-drag-the-male-population-to-the-label-under-male-population.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#drag-the-female-population-to-the-label-under-female-population-drag-the-male-population-to-the-label-under-male-population.",
    "title": "Take-home Exercise 1",
    "section": "Drag the Female Population to the label under Female Population, drag the Male Population to the label under Male Population.",
    "text": "Drag the Female Population to the label under Female Population, drag the Male Population to the label under Male Population."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#click-the-label-under-the-female-population-and-select-the-following-setting-do-the-same-thing-for-male-population.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#click-the-label-under-the-female-population-and-select-the-following-setting-do-the-same-thing-for-male-population.",
    "title": "Take-home Exercise 1",
    "section": "Click the label under the Female Population and select the following setting, do the same thing for Male Population.",
    "text": "Click the label under the Female Population and select the following setting, do the same thing for Male Population."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#format-the-numbers-of-sumfemale-population-from-automatic-to-numbercustomthousandsk-decimal-is-0.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#format-the-numbers-of-sumfemale-population-from-automatic-to-numbercustomthousandsk-decimal-is-0.",
    "title": "Take-home Exercise 1",
    "section": "14. Format the numbers of SUM(Female Population) from automatic to Number(custom)–Thousands(K), decimal is “0”.",
    "text": "14. Format the numbers of SUM(Female Population) from automatic to Number(custom)–Thousands(K), decimal is “0”."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#do-the-same-thing-for-male-population.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#do-the-same-thing-for-male-population.",
    "title": "Take-home Exercise 1",
    "section": "Do the same thing for Male population.",
    "text": "Do the same thing for Male population."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#change-the-name-of-sheet1-to-demographic-structure-of-singapore-at-top-9-population-planning-area-in-june-2022.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#change-the-name-of-sheet1-to-demographic-structure-of-singapore-at-top-9-population-planning-area-in-june-2022.",
    "title": "Take-home Exercise 1",
    "section": "15. Change the name of sheet1 to “Demographic structure of Singapore at top 9 population planning area in June 2022”.",
    "text": "15. Change the name of sheet1 to “Demographic structure of Singapore at top 9 population planning area in June 2022”."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#create-dashboard.-click-the-new-dashboard.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#create-dashboard.-click-the-new-dashboard.",
    "title": "Take-home Exercise 1",
    "section": "16. Create dashboard. Click the New Dashboard.",
    "text": "16. Create dashboard. Click the New Dashboard."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#drag-the-sheet-into-the-right-drop-sheets-here.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#drag-the-sheet-into-the-right-drop-sheets-here.",
    "title": "Take-home Exercise 1",
    "section": "drag the sheet into the right “drop sheets here”.",
    "text": "drag the sheet into the right “drop sheets here”."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#change-the-dashboard-name-to-demographic-structure-of-singapore-at-top-9-population-planning-area-in-june-2022.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#change-the-dashboard-name-to-demographic-structure-of-singapore-at-top-9-population-planning-area-in-june-2022.",
    "title": "Take-home Exercise 1",
    "section": "Change the dashboard name to “Demographic structure of Singapore at top 9 population planning area in June 2022”.",
    "text": "Change the dashboard name to “Demographic structure of Singapore at top 9 population planning area in June 2022”."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#save-the-file-to-take-home-exercise-1.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#save-the-file-to-take-home-exercise-1.",
    "title": "Take-home Exercise 1",
    "section": "17. Save the file to Take-home Exercise 1.",
    "text": "17. Save the file to Take-home Exercise 1."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#extract-data.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#extract-data.",
    "title": "Take-home Exercise 1",
    "section": "18. Extract data.",
    "text": "18. Extract data."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#publish-the-dashboard-to-httpspublic.tableau.comapp",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#publish-the-dashboard-to-httpspublic.tableau.comapp",
    "title": "Take-home Exercise 1",
    "section": "19. Publish the dashboard to https://public.tableau.com/app/",
    "text": "19. Publish the dashboard to https://public.tableau.com/app/"
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#in-general-among-the-resident-population-female-population-is-slightly-larger-than-the-male-population-in-the-top-9-population-planning-areas.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#in-general-among-the-resident-population-female-population-is-slightly-larger-than-the-male-population-in-the-top-9-population-planning-areas.",
    "title": "Take-home Exercise 1",
    "section": "In general, among the resident population, Female Population is slightly larger than the Male Population in the top 9 population planning areas.",
    "text": "In general, among the resident population, Female Population is slightly larger than the Male Population in the top 9 population planning areas."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#overall-the-age-groups-of-20-to-29-30-to-39-40-to-49-50-to-59-60-to-69-contributes-the-main-distribution-of-population-of-females-and-males-in-those-planning-areas-except-punggol-and-sengkang.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#overall-the-age-groups-of-20-to-29-30-to-39-40-to-49-50-to-59-60-to-69-contributes-the-main-distribution-of-population-of-females-and-males-in-those-planning-areas-except-punggol-and-sengkang.",
    "title": "Take-home Exercise 1",
    "section": "Overall, the age groups of 20 to 29, 30 to 39, 40 to 49, 50 to 59, 60 to 69 contributes the main distribution of population of females and males in those planning areas except Punggol and Sengkang.",
    "text": "Overall, the age groups of 20 to 29, 30 to 39, 40 to 49, 50 to 59, 60 to 69 contributes the main distribution of population of females and males in those planning areas except Punggol and Sengkang."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#in-the-9-planning-areas-in-punggol-and-sengkang-planning-areas-residents-aged-30-to-39-40-to-49-has-significant-larger-population-compared-to-other-age-groups.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#in-the-9-planning-areas-in-punggol-and-sengkang-planning-areas-residents-aged-30-to-39-40-to-49-has-significant-larger-population-compared-to-other-age-groups.",
    "title": "Take-home Exercise 1",
    "section": "In the 9 planning areas, in Punggol and Sengkang planning areas, residents aged 30 to 39, 40 to 49 has significant larger population compared to other age groups.",
    "text": "In the 9 planning areas, in Punggol and Sengkang planning areas, residents aged 30 to 39, 40 to 49 has significant larger population compared to other age groups."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#in-woodlands-and-choa-chu-kang-planning-area-age-groups-of-20-to-29-and-50-to-59-have-obviously-larger-population-compared-to-other-age-groups.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#in-woodlands-and-choa-chu-kang-planning-area-age-groups-of-20-to-29-and-50-to-59-have-obviously-larger-population-compared-to-other-age-groups.",
    "title": "Take-home Exercise 1",
    "section": "In woodlands and Choa Chu Kang planning area, age groups of 20 to 29 and 50 to 59 have obviously larger population compared to other age groups.",
    "text": "In woodlands and Choa Chu Kang planning area, age groups of 20 to 29 and 50 to 59 have obviously larger population compared to other age groups."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#in-bedok-tampines-yishun-from-the-pyramid-shape-we-can-notice-that-population-aged-groups-are-larger-than-younger-generation-.",
    "href": "Take-home Exercise/Take-home Exercise 1/Take-home Exercise 1.html#in-bedok-tampines-yishun-from-the-pyramid-shape-we-can-notice-that-population-aged-groups-are-larger-than-younger-generation-.",
    "title": "Take-home Exercise 1",
    "section": "In Bedok, Tampines, Yishun, from the pyramid shape, we can notice that population aged groups are larger than younger generation .",
    "text": "In Bedok, Tampines, Yishun, from the pyramid shape, we can notice that population aged groups are larger than younger generation ."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html",
    "href": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "The task Take-home Exercise 2 is to select one of the Take-home Exercise 1 prepared by our classmate, critic the submission in terms of clarity and aesthetics,prepare a sketch for the alternative design by using the data visualisation design principles and best practices we had learned in Lesson 1 and 2, and remake the original design by using ggplot2, ggplot2 extensions and tidyverse packages."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#original-design",
    "href": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#original-design",
    "title": "Take-home Exercise 2",
    "section": "4.1 Original design",
    "text": "4.1 Original design\nThe following is the age-sex pyramid provided by my classmate in this take-home exercise 1 and it will be reviewed and remade in terms of clarity and aesthetics."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#clarity",
    "href": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#clarity",
    "title": "Take-home Exercise 2",
    "section": "4.2 Clarity",
    "text": "4.2 Clarity\n\n4.2.1 Graphical Integrity: Show Me the Truth\nThe better way for define the age group segmentation should be 0-4, 5-9, etc, and not “children”,“early working age”, etc. The reason is “children”,“early working age”, etc is too general, it will mask out age segmentatio signal.\n\n\n4.2.2 Visualising the Right Data\nAbsolute values will reveal more interesting patterns than the derived values. From the derived values which is population in percentage, we will not know what is the number of female and male population difference from the 9 most populated planning areas.\n\n\n4.2.3 Reference line\nIn the remake, the reference line is added which is the avg population (sum of total population divided by 9 planning areas/19 age groups/2 genders).\n\n\n4.2.4 interactive function\nAdd on interactive function into the chart to show the population numbers when move cursor."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#aesthetics",
    "href": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#aesthetics",
    "title": "Take-home Exercise 2",
    "section": "4.3 Aesthetics",
    "text": "4.3 Aesthetics\n\n4.3.1 Application of pre-attentive principle\nColours. The original age-sex pyramid used one color for two genders. However, this display does not show a clear comparison betewwn male and female population. It does not help user to distinguish the genders from the 1st attention. . It’s suggested to choose two different colors to indicate the two different genders in this visualization.\n\n\n4.3.2 X-Axis Title & Labels\nThe population number is large. It’s good to show number in the unit of thousand With the aid of the newly added x-axis title and labels, it makes it easier for users to read and interpret this visualization. The X-axis labels will be converted to positive values because population should be positive values.\n\n\n4.3.3 Caption\nThe caption to mention the data source for this visualization has also been included at the bottom in a clean manner."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#calculate-total-population-count-by-planning-area",
    "href": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#calculate-total-population-count-by-planning-area",
    "title": "Take-home Exercise 2",
    "section": "Calculate total population count by planning area",
    "text": "Calculate total population count by planning area\n\npop_pa <- population %>%\n  select(PA,AG,Sex,Pop) %>%\n  group_by(PA) %>%\n  summarise(totalPop = sum(Pop))"
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#sort-planning-areas-by-population",
    "href": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#sort-planning-areas-by-population",
    "title": "Take-home Exercise 2",
    "section": "Sort planning areas by population",
    "text": "Sort planning areas by population\n\npop_sorted <- pop_pa[order(pop_pa$totalPop, decreasing = TRUE), ]"
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#select-top-9-planning-areas-by-population",
    "href": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#select-top-9-planning-areas-by-population",
    "title": "Take-home Exercise 2",
    "section": "Select top 9 planning areas by population",
    "text": "Select top 9 planning areas by population\n\npop_filtered <- head(pop_sorted, 9)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#filter-the-raw-dataset-according-to-the-top-9-planning-areas-by-population",
    "href": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#filter-the-raw-dataset-according-to-the-top-9-planning-areas-by-population",
    "title": "Take-home Exercise 2",
    "section": "Filter the raw dataset according to the top 9 planning areas by population",
    "text": "Filter the raw dataset according to the top 9 planning areas by population\n\npop_pa_filtered <- population %>%\n  filter(PA %in% pop_filtered$PA)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#aggregate-data-by-planning-areas-age-group-and-sex",
    "href": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#aggregate-data-by-planning-areas-age-group-and-sex",
    "title": "Take-home Exercise 2",
    "section": "aggregate data by planning areas, age group and sex",
    "text": "aggregate data by planning areas, age group and sex\n\nPop_pa_age_sex <- aggregate(Pop ~ PA + AG + Sex, data = pop_pa_filtered, FUN = sum)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#sort-dataset-by-top-9-planning-areas-and-age-group",
    "href": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#sort-dataset-by-top-9-planning-areas-and-age-group",
    "title": "Take-home Exercise 2",
    "section": "Sort dataset by top 9 planning areas and age group",
    "text": "Sort dataset by top 9 planning areas and age group\nverify the age groups\n\nfreq(data=Pop_pa_age_sex , \n     input = 'AG')\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\nℹ The deprecated feature was likely used in the funModeling package.\n  Please report the issue at <https://github.com/pablo14/funModeling/issues>.\n\n\n\n\n\n            AG frequency percentage cumulative_perc\n1       0_to_4        18       5.26            5.26\n2     10_to_14        18       5.26           10.52\n3     15_to_19        18       5.26           15.78\n4     20_to_24        18       5.26           21.04\n5     25_to_29        18       5.26           26.30\n6     30_to_34        18       5.26           31.56\n7     35_to_39        18       5.26           36.82\n8     40_to_44        18       5.26           42.08\n9     45_to_49        18       5.26           47.34\n10      5_to_9        18       5.26           52.60\n11    50_to_54        18       5.26           57.86\n12    55_to_59        18       5.26           63.12\n13    60_to_64        18       5.26           68.38\n14    65_to_69        18       5.26           73.64\n15    70_to_74        18       5.26           78.90\n16    75_to_79        18       5.26           84.16\n17    80_to_84        18       5.26           89.42\n18    85_to_89        18       5.26           94.68\n19 90_and_over        18       5.26          100.00"
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#order-the-age-groups",
    "href": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#order-the-age-groups",
    "title": "Take-home Exercise 2",
    "section": "order the age groups",
    "text": "order the age groups\n\nPop_pa_age_sex$AG[which(Pop_pa_age_sex$AG==\"0_to_4\")] <-\"00_to_04\"\nPop_pa_age_sex$AG[which(Pop_pa_age_sex$AG==\"5_to_9\")] <-\"05_to_09\""
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#derived-the-population-in-thousand-and-avg-population-in-thousand",
    "href": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#derived-the-population-in-thousand-and-avg-population-in-thousand",
    "title": "Take-home Exercise 2",
    "section": "Derived the population in thousand and avg population in thousand",
    "text": "Derived the population in thousand and avg population in thousand\n\npop_final <- Pop_pa_age_sex %>%\n\n  mutate(Pop_2=round(Pop/1000,2))%>%\n  mutate(Avg=round(sum(Pop)/1000/9/19/2,2))%>%\n  arrange(PA, AG)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#create-the-age_sex_pyramid",
    "href": "Take-home Exercise/Take-home Exercise 2/Take-home Exercise 2.html#create-the-age_sex_pyramid",
    "title": "Take-home Exercise 2",
    "section": "Create the age_sex_pyramid",
    "text": "Create the age_sex_pyramid\n\nage_sex_pyramid <- ggplot(data=pop_final,aes(x=AG,fill=Sex)) +\n  theme_bw() + ## change background color to white\n  geom_bar(data=subset(pop_final,Sex==\"Females\"),stat='identity',aes(y=Pop_2)) +\n  geom_bar(data=subset(pop_final,Sex==\"Males\"),stat='identity',aes(y=Pop_2*(-1)))  + \n  scale_y_continuous(breaks=seq(-20,20,5),labels=abs(seq(-20,20,5))) +\n  facet_wrap(~ PA)+\n  coord_flip()+\n  theme_bw() +\n  scale_fill_manual(values = c(\"Males\" = \"blue\", \n                               \"Females\" = \"red\")) +\n\n\n  labs(x = \"Age Group\", \n       y = \"Population(in thousand)\",\n       title = \"Singapore Population Pyramid by age&sex from top 9 Planning Areas in June 2022\",  \n       subtitle = \"Top 9 Planning Areas by Population, 2022\",\n       caption = \"Data Source: https://www.singstat.gov.sg/find-data/search-by-theme/population/geographic-distribution/latest-data\")+\n\n    theme(plot.title = element_text(hjust=0.5, size=14),\n          plot.subtitle = element_text(hjust = 0.5,size = 8),\n          legend.title = element_text(size=10),\n          legend.text = element_text(size=8),\n          axis.text = element_text(face=\"bold\"),\n          axis.ticks.x=element_blank(),\n          axis.text.x = element_text(angle = 0),\n          axis.title.y=element_text(angle=0))\n\nage_sex_pyramid_final <-age_sex_pyramid + geom_hline(yintercept = pop_final$Avg,linetype=\"dotted\", color = \"black\") + geom_hline(yintercept = -(pop_final$Avg),linetype=\"dotted\", color = \"black\")+\n\n  geom_text(aes(0,Avg,label = 'Avg', vjust = -1))+\n  geom_text(aes(0,-Avg,label = 'Avg', vjust = -1)) \n\nggplotly(age_sex_pyramid_final)"
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html",
    "href": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html",
    "title": "Take-home Exercise 3",
    "section": "",
    "text": "In this take-home exercise, we are required to uncover the salient patterns of the resale prices of public housing property by residential towns and estates in Singapore by using appropriate analytical visualisation techniques learned in Lesson 4: Fundamentals of Visual Analytics. Students are encouraged to apply appropriate interactive techniques to enhance user and data discovery experiences.\nFor the purpose of this study, the focus should be on 3-ROOM, 4-ROOM and 5-ROOM types. You can choose to focus on either one housing type or multiple housing types. The study period should be on 2022."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#packages-used",
    "href": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#packages-used",
    "title": "Take-home Exercise 3",
    "section": "3.1 Packages used",
    "text": "3.1 Packages used\nBefore we get started, it is important for us to install the necessary R packages into R and launch these R packages into R environment.\nThe R packages needed for this exercise are as follows:\n\n\nShow the code\npacman::p_load(ggstatsplot, ggthemes, plotly, corrplot, lubridate, ggpubr, plotly, gganimate, viridis, ggridges, ggrepel, testthat, hmisc, tidyverse, funModeling, PMCMRplus, gifski, ggplot2,treemap )"
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#importing-data",
    "href": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#importing-data",
    "title": "Take-home Exercise 3",
    "section": "4.1 Importing Data",
    "text": "4.1 Importing Data\n\n\nShow the code\nresale_prices <- read_csv(\"data/aspatial/resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv\")"
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#data-wrangling",
    "href": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#data-wrangling",
    "title": "Take-home Exercise 3",
    "section": "4.2 Data Wrangling",
    "text": "4.2 Data Wrangling\n\n4.2.1 Get summary of the data\n\n\nShow the code\nsummary(resale_prices)\n\n\n    month               town            flat_type            block          \n Length:146872      Length:146872      Length:146872      Length:146872     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n street_name        storey_range       floor_area_sqm   flat_model       \n Length:146872      Length:146872      Min.   : 31.0   Length:146872     \n Class :character   Class :character   1st Qu.: 82.0   Class :character  \n Mode  :character   Mode  :character   Median : 94.0   Mode  :character  \n                                       Mean   : 97.6                     \n                                       3rd Qu.:113.0                     \n                                       Max.   :249.0                     \n lease_commence_date remaining_lease     resale_price    \n Min.   :1966        Length:146872      Min.   : 140000  \n 1st Qu.:1985        Class :character   1st Qu.: 358000  \n Median :1996        Mode  :character   Median : 448000  \n Mean   :1996                           Mean   : 478316  \n 3rd Qu.:2007                           3rd Qu.: 565800  \n Max.   :2019                           Max.   :1418000  \n\n\n\n\n4.2.2 Check if any missing values\n\n\nShow the code\nskimr::skim(resale_prices)\n\n\n\nData summary\n\n\nName\nresale_prices\n\n\nNumber of rows\n146872\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n8\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmonth\n0\n1\n7\n7\n0\n74\n0\n\n\ntown\n0\n1\n5\n15\n0\n26\n0\n\n\nflat_type\n0\n1\n6\n16\n0\n7\n0\n\n\nblock\n0\n1\n1\n4\n0\n2654\n0\n\n\nstreet_name\n0\n1\n7\n20\n0\n564\n0\n\n\nstorey_range\n0\n1\n8\n8\n0\n17\n0\n\n\nflat_model\n0\n1\n4\n22\n0\n21\n0\n\n\nremaining_lease\n0\n1\n8\n18\n0\n659\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nfloor_area_sqm\n0\n1\n97.60\n24.09\n31\n82\n94\n113\n249\n▃▇▃▁▁\n\n\nlease_commence_date\n0\n1\n1995.52\n13.73\n1966\n1985\n1996\n2007\n2019\n▂▇▅▆▇\n\n\nresale_price\n0\n1\n478315.95\n165533.82\n140000\n358000\n448000\n565800\n1418000\n▆▇▂▁▁\n\n\n\n\n\n\n\n4.2.3 EDA\n\n\nShow the code\nfreq(data=resale_prices, \n     input = 'town')\n\n\n\n\n\n              town frequency percentage cumulative_perc\n1         SENGKANG     12386       8.43            8.43\n2          PUNGGOL     10789       7.35           15.78\n3        WOODLANDS     10215       6.96           22.74\n4           YISHUN     10058       6.85           29.59\n5         TAMPINES      9865       6.72           36.31\n6      JURONG WEST      9749       6.64           42.95\n7            BEDOK      7913       5.39           48.34\n8          HOUGANG      7196       4.90           53.24\n9    CHOA CHU KANG      6745       4.59           57.83\n10      ANG MO KIO      6144       4.18           62.01\n11     BUKIT MERAH      5640       3.84           65.85\n12   BUKIT PANJANG      5637       3.84           69.69\n13     BUKIT BATOK      4919       3.35           73.04\n14       TOA PAYOH      4695       3.20           76.24\n15       PASIR RIS      4544       3.09           79.33\n16 KALLANG/WHAMPOA      4411       3.00           82.33\n17      QUEENSTOWN      4176       2.84           85.17\n18         GEYLANG      3645       2.48           87.65\n19       SEMBAWANG      3635       2.47           90.12\n20        CLEMENTI      3366       2.29           92.41\n21     JURONG EAST      3059       2.08           94.49\n22          BISHAN      2795       1.90           96.39\n23       SERANGOON      2744       1.87           98.26\n24    CENTRAL AREA      1221       0.83           99.09\n25   MARINE PARADE       941       0.64           99.73\n26     BUKIT TIMAH       384       0.26          100.00\n\n\n\n\nShow the code\nfreq(data=resale_prices, \n     input = 'flat_type')\n\n\n\n\n\n         flat_type frequency percentage cumulative_perc\n1           4 ROOM     61336      41.76           41.76\n2           5 ROOM     37194      25.32           67.08\n3           3 ROOM     34524      23.51           90.59\n4        EXECUTIVE     11412       7.77           98.36\n5           2 ROOM      2276       1.55           99.91\n6 MULTI-GENERATION        72       0.05           99.96\n7           1 ROOM        58       0.04          100.00\n\n\n\n\nShow the code\nfreq(data=resale_prices, \n     input = 'storey_range')\n\n\n\n\n\n   storey_range frequency percentage cumulative_perc\n1      04 TO 06     33835      23.04           23.04\n2      07 TO 09     30771      20.95           43.99\n3      10 TO 12     27375      18.64           62.63\n4      01 TO 03     25984      17.69           80.32\n5      13 TO 15     14055       9.57           89.89\n6      16 TO 18      6608       4.50           94.39\n7      19 TO 21      2812       1.91           96.30\n8      22 TO 24      2047       1.39           97.69\n9      25 TO 27      1219       0.83           98.52\n10     28 TO 30       773       0.53           99.05\n11     31 TO 33       407       0.28           99.33\n12     34 TO 36       385       0.26           99.59\n13     37 TO 39       340       0.23           99.82\n14     40 TO 42       166       0.11           99.93\n15     43 TO 45        48       0.03           99.96\n16     46 TO 48        34       0.02           99.98\n17     49 TO 51        13       0.01          100.00\n\n\n\n\nShow the code\nfreq(data=resale_prices, \n     input = 'floor_area_sqm')\n\n\n    floor_area_sqm frequency percentage cumulative_perc\n1               93     10082       6.86            6.86\n2               92      9260       6.30           13.16\n3               67      9019       6.14           19.30\n4              110      7075       4.82           24.12\n5               68      5538       3.77           27.89\n6              104      5066       3.45           31.34\n7               90      4339       2.95           34.29\n8               91      3941       2.68           36.97\n9              121      3834       2.61           39.58\n10              84      3647       2.48           42.06\n11             113      3383       2.30           44.36\n12              65      3115       2.12           46.48\n13             103      3008       2.05           48.53\n14             122      3006       2.05           50.58\n15             112      3000       2.04           52.62\n16              73      2646       1.80           54.42\n17              74      2286       1.56           55.98\n18             105      2158       1.47           57.45\n19             120      2131       1.45           58.90\n20             100      2123       1.45           60.35\n21             146      1835       1.25           61.60\n22              94      1826       1.24           62.84\n23              95      1769       1.20           64.04\n24             111      1732       1.18           65.22\n25              82      1639       1.12           66.34\n26              60      1590       1.08           67.42\n27              64      1548       1.05           68.47\n28             101      1518       1.03           69.50\n29             123      1473       1.00           70.50\n30              59      1399       0.95           71.45\n31             115      1389       0.95           72.40\n32             102      1338       0.91           73.31\n33             106      1172       0.80           74.11\n34              85      1020       0.69           74.80\n35             107       988       0.67           75.47\n36             117       962       0.65           76.12\n37             130       957       0.65           76.77\n38             118       918       0.63           77.40\n39             125       916       0.62           78.02\n40             114       908       0.62           78.64\n41             108       895       0.61           79.25\n42              69       892       0.61           79.86\n43             119       892       0.61           80.47\n44              96       868       0.59           81.06\n45              47       842       0.57           81.63\n46              83       816       0.56           82.19\n47             124       813       0.55           82.74\n48             126       795       0.54           83.28\n49              88       793       0.54           83.82\n50             148       740       0.50           84.32\n51              66       734       0.50           84.82\n52             128       706       0.48           85.30\n53             147       694       0.47           85.77\n54             127       676       0.46           86.23\n55             142       670       0.46           86.69\n56              98       658       0.45           87.14\n57              87       635       0.43           87.57\n58              99       630       0.43           88.00\n59             144       629       0.43           88.43\n60              97       597       0.41           88.84\n61             143       590       0.40           89.24\n62             149       588       0.40           89.64\n63              70       576       0.39           90.03\n64              89       566       0.39           90.42\n65             145       559       0.38           90.80\n66             150       551       0.38           91.18\n67             132       541       0.37           91.55\n68              75       533       0.36           91.91\n69              76       529       0.36           92.27\n70             109       527       0.36           92.63\n71             116       527       0.36           92.99\n72             141       509       0.35           93.34\n73             131       501       0.34           93.68\n74             133       472       0.32           94.00\n75              86       434       0.30           94.30\n76             137       408       0.28           94.58\n77             134       403       0.27           94.85\n78             140       395       0.27           95.12\n79              56       384       0.26           95.38\n80              46       338       0.23           95.61\n81              63       324       0.22           95.83\n82              72       316       0.22           96.05\n83             135       310       0.21           96.26\n84              81       300       0.20           96.46\n85              62       245       0.17           96.63\n86              44       240       0.16           96.79\n87             151       236       0.16           96.95\n88              45       226       0.15           97.10\n89             129       226       0.15           97.25\n90             139       216       0.15           97.40\n91             154       196       0.13           97.53\n92             136       188       0.13           97.66\n93              61       179       0.12           97.78\n94              58       159       0.11           97.89\n95              71       145       0.10           97.99\n96              77       145       0.10           98.09\n97             152       143       0.10           98.19\n98              48       139       0.09           98.28\n99             138       138       0.09           98.37\n100             80       124       0.08           98.45\n101             57       111       0.08           98.53\n102             79       105       0.07           98.60\n103            155       104       0.07           98.67\n104             78       101       0.07           98.74\n105            177        95       0.06           98.80\n106             50        93       0.06           98.86\n107             40        88       0.06           98.92\n108            163        84       0.06           98.98\n109            153        75       0.05           99.03\n110             43        70       0.05           99.08\n111            156        68       0.05           99.13\n112             52        64       0.04           99.17\n113             54        64       0.04           99.21\n114             42        63       0.04           99.25\n115            164        62       0.04           99.29\n116             53        61       0.04           99.33\n117             55        60       0.04           99.37\n118             31        58       0.04           99.41\n119           60.3        53       0.04           99.45\n120            189        51       0.03           99.48\n121            192        42       0.03           99.51\n122            161        40       0.03           99.54\n123            162        38       0.03           99.57\n124            173        38       0.03           99.60\n125            176        37       0.03           99.63\n126            179        36       0.02           99.65\n127            157        35       0.02           99.67\n128            159        35       0.02           99.69\n129            170        34       0.02           99.71\n130            158        30       0.02           99.73\n131            174        30       0.02           99.75\n132             49        27       0.02           99.77\n133             38        26       0.02           99.79\n134           63.1        24       0.02           99.81\n135            166        24       0.02           99.83\n136            165        23       0.02           99.85\n137             34        16       0.01           99.86\n138            160        15       0.01           99.87\n139             51        14       0.01           99.88\n140            169        12       0.01           99.89\n141            172        12       0.01           99.90\n142             41        11       0.01           99.91\n143            181        11       0.01           99.92\n144            184         9       0.01           99.93\n145            171         8       0.01           99.94\n146            187         7       0.00           99.94\n147             37         5       0.00           99.94\n148            199         5       0.00           99.94\n149            168         4       0.00           99.94\n150            175         4       0.00           99.94\n151            182         4       0.00           99.94\n152             35         3       0.00           99.94\n153           83.1         3       0.00           99.94\n154            178         3       0.00           99.94\n155            186         3       0.00           99.94\n156            215         3       0.00           99.94\n157            188         2       0.00           99.94\n158            190         2       0.00           99.94\n159            243         2       0.00           99.94\n160             39         1       0.00           99.94\n161            167         1       0.00           99.94\n162            180         1       0.00           99.94\n163            183         1       0.00           99.94\n164            185         1       0.00           99.94\n165            210         1       0.00           99.94\n166            222         1       0.00           99.94\n167            237         1       0.00           99.94\n168            241         1       0.00           99.94\n169            249         1       0.00          100.00\n\n\n\n\nShow the code\nfreq(data=resale_prices, \n     input = 'lease_commence_date')\n\n\n\n\n\n   lease_commence_date frequency percentage cumulative_perc\n1                 2015      8816       6.00            6.00\n2                 1985      8786       5.98           11.98\n3                 1984      6479       4.41           16.39\n4                 1988      5526       3.76           20.15\n5                 2016      5411       3.68           23.83\n6                 2001      4919       3.35           27.18\n7                 2013      4568       3.11           30.29\n8                 1997      4487       3.06           33.35\n9                 1987      4466       3.04           36.39\n10                2003      4297       2.93           39.32\n11                1998      4128       2.81           42.13\n12                1999      4068       2.77           44.90\n13                1978      4056       2.76           47.66\n14                2017      4041       2.75           50.41\n15                1986      3975       2.71           53.12\n16                2000      3844       2.62           55.74\n17                1996      3639       2.48           58.22\n18                1989      3626       2.47           60.69\n19                2012      3400       2.31           63.00\n20                2002      3311       2.25           65.25\n21                1993      3296       2.24           67.49\n22                2014      3246       2.21           69.70\n23                1979      3242       2.21           71.91\n24                1980      3189       2.17           74.08\n25                2018      2608       1.78           75.86\n26                1992      2589       1.76           77.62\n27                2004      2507       1.71           79.33\n28                1995      2423       1.65           80.98\n29                1976      2388       1.63           82.61\n30                1983      2272       1.55           84.16\n31                1981      2205       1.50           85.66\n32                1977      1976       1.35           87.01\n33                1975      1882       1.28           88.29\n34                2011      1793       1.22           89.51\n35                1974      1526       1.04           90.55\n36                1982      1457       0.99           91.54\n37                2005      1309       0.89           92.43\n38                1970      1224       0.83           93.26\n39                2006      1166       0.79           94.05\n40                1990      1010       0.69           94.74\n41                2008       959       0.65           95.39\n42                1994       846       0.58           95.97\n43                1973       827       0.56           96.53\n44                2009       825       0.56           97.09\n45                1967       725       0.49           97.58\n46                1969       703       0.48           98.06\n47                1972       659       0.45           98.51\n48                1971       644       0.44           98.95\n49                2010       641       0.44           99.39\n50                2007       392       0.27           99.66\n51                1968       180       0.12           99.78\n52                2019       158       0.11           99.89\n53                1991       149       0.10           99.99\n54                1966        13       0.01          100.00\n\n\n\n\nShow the code\nunique(resale_prices$storey_range)\n\n\n [1] \"10 TO 12\" \"01 TO 03\" \"04 TO 06\" \"07 TO 09\" \"13 TO 15\" \"19 TO 21\"\n [7] \"22 TO 24\" \"16 TO 18\" \"34 TO 36\" \"28 TO 30\" \"37 TO 39\" \"49 TO 51\"\n[13] \"25 TO 27\" \"40 TO 42\" \"31 TO 33\" \"46 TO 48\" \"43 TO 45\"\n\n\n\n\nShow the code\ngghistostats(\n  data = resale_prices,\n  x = resale_price,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"Resale price\"\n) +\n  theme_minimal()\n\n\n\n\n\n\n\n4.2.4 Derive new variables\nSeparate the years and months.\n\n\nShow the code\nresale_prices_1 <- resale_prices %>% \n  separate(month, c(\"Year\", \"Month\"), sep = \"-\")\n\n\nConvert string to integer.\n\n\nShow the code\nresale_prices_1$Year <- strtoi(resale_prices_1$Year)\nresale_prices_1$Month <- strtoi(resale_prices_1$Month)\n\n\nconvert reaming_lease to reaming_lease_year.\n\n\nShow the code\nresale_prices_2 <- bind_cols(resale_prices_1,\n                              (str_split_fixed(resale_prices_1$remaining_lease, \n                                           \" \", \n                                           4) %>% \n                             data.frame() %>% \n                             rename(year_lease = X1, \n                                    omit1 = X2, \n                                    month_lease = X3, \n                                    omit2 = X4) %>%\n                             select (-c(omit1, omit2)) %>%\n                             mutate(month_lease = \n                                      ifelse(month_lease == \"\", 0, \n                                             month_lease)) %>% \n                             mutate_if(is.character, as.numeric))\n                          ) %>%\n  mutate (remaining_lease_years = round(year_lease + month_lease/12,2))\n\n\nderive new variables price_psm,price_thousand,property_age.\n\n\nShow the code\nresale_prices_3 <- resale_prices_2 %>%\n  mutate(price_psm = round(resale_price / floor_area_sqm)) %>%\n  mutate(price_thousand = round(resale_price / 1000)) \n\n\nFilter by year 2022\n\n\nShow the code\nresale_prices_2022 <- resale_prices_3 %>%\n  filter(Year == \"2022\", flat_type %in% c(\"3 ROOM\", \"4 ROOM\", \"5 ROOM\"))\n\n\n\n\n4.2.5 Rview output\n\n\nShow the code\nunique(resale_prices_2022$Year)\n\n\n[1] 2022\n\n\nShow the code\nunique(resale_prices_2022$flat_type)\n\n\n[1] \"3 ROOM\" \"4 ROOM\" \"5 ROOM\"\n\n\n\n\nShow the code\nsummary(resale_prices_2022)\n\n\n      Year          Month            town            flat_type        \n Min.   :2022   Min.   : 1.000   Length:24372       Length:24372      \n 1st Qu.:2022   1st Qu.: 3.000   Class :character   Class :character  \n Median :2022   Median : 5.000   Mode  :character   Mode  :character  \n Mean   :2022   Mean   : 6.047                                        \n 3rd Qu.:2022   3rd Qu.:10.000                                        \n Max.   :2022   Max.   :12.000                                        \n                NA's   :4450                                          \n    block           street_name        storey_range       floor_area_sqm  \n Length:24372       Length:24372       Length:24372       Min.   : 51.00  \n Class :character   Class :character   Class :character   1st Qu.: 81.00  \n Mode  :character   Mode  :character   Mode  :character   Median : 93.00  \n                                                          Mean   : 94.08  \n                                                          3rd Qu.:110.00  \n                                                          Max.   :159.00  \n                                                                          \n  flat_model        lease_commence_date remaining_lease     resale_price    \n Length:24372       Min.   :1967        Length:24372       Min.   : 200000  \n Class :character   1st Qu.:1985        Class :character   1st Qu.: 428000  \n Mode  :character   Median :1998        Mode  :character   Median : 515000  \n                    Mean   :1997                           Mean   : 536394  \n                    3rd Qu.:2014                           3rd Qu.: 610000  \n                    Max.   :2019                           Max.   :1418000  \n                                                                            \n   year_lease     month_lease     remaining_lease_years   price_psm    \n Min.   :43.00   Min.   : 0.000   Min.   :43.08         Min.   : 3333  \n 1st Qu.:61.00   1st Qu.: 3.000   1st Qu.:61.75         1st Qu.: 4838  \n Median :74.00   Median : 6.000   Median :74.58         Median : 5368  \n Mean   :74.06   Mean   : 5.557   Mean   :74.52         Mean   : 5736  \n 3rd Qu.:91.00   3rd Qu.: 9.000   3rd Qu.:91.42         3rd Qu.: 6176  \n Max.   :96.00   Max.   :11.000   Max.   :96.42         Max.   :14731  \n                                                                       \n price_thousand  \n Min.   : 200.0  \n 1st Qu.: 428.0  \n Median : 515.0  \n Mean   : 536.4  \n 3rd Qu.: 610.0  \n Max.   :1418.0"
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#correlation-analysis",
    "href": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#correlation-analysis",
    "title": "Take-home Exercise 3",
    "section": "5.1 Correlation analysis",
    "text": "5.1 Correlation analysis\n\n\nShow the code\nresale_prices_2022_cor <- resale_prices_2022%>%\n  select (1:2, 8, 10, 15:17)\n\n\n\n\nShow the code\ncluster_vars.cor = cor(resale_prices_2022_cor[,3:6])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\nThere is no strong correlation amongst the above variables."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#normality-analysis",
    "href": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#normality-analysis",
    "title": "Take-home Exercise 3",
    "section": "5.2 Normality analysis",
    "text": "5.2 Normality analysis\n\n5.2.1 Overall check Prices by flat_type\n\n\nShow the code\nset.seed(1234)\n\nresale_prices_2022_3room <- resale_prices_2022 %>%\n  filter(flat_type == \"3 ROOM\")\nresale_prices_2022_4room <- resale_prices_2022 %>%\n  filter(flat_type == \"4 ROOM\")\nresale_prices_2022_5room <- resale_prices_2022 %>%\n  filter(flat_type == \"5 ROOM\")\n\np1 <- gghistostats(\n  data = resale_prices_2022_3room,\n  x = price_thousand,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"3 room Price in Thousands\") +\n  \n  theme_minimal() \n        \np2 <- gghistostats(\n  data = resale_prices_2022_4room,\n  x = price_thousand,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"4 room Price in Thousands\") +\n  \n  theme_minimal() \n\np3 <- gghistostats(\n  data = resale_prices_2022_5room,\n  x = price_thousand,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"5 room Price in Thousands\") +\n  \n  theme_minimal() \nggarrange(p1,p2,p3, ncol = 3, nrow = 1)\n\n\n\n\n\nThe chart shows, overall, 3 Room price mean is about 350k, 4 Room price mean is about 464K, 5 Room price mean is about 555k."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#proportion-and-numbers-of-flat-types-in-singapore",
    "href": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#proportion-and-numbers-of-flat-types-in-singapore",
    "title": "Take-home Exercise 3",
    "section": "5.3 Proportion and numbers of flat types in Singapore",
    "text": "5.3 Proportion and numbers of flat types in Singapore\n\n5.3.1 Derive new varibles\n\n\nShow the code\nflat_type_proportion<- resale_prices_2022 %>% \n  group_by(town, flat_type) %>% \n  summarise(\n  \n    n=n())%>% \n  mutate(pct_flat = round(n/sum(n)*100)) \nhead(flat_type_proportion)\n\n\n# A tibble: 6 × 4\n# Groups:   town [2]\n  town       flat_type     n pct_flat\n  <chr>      <chr>     <int>    <dbl>\n1 ANG MO KIO 3 ROOM      528       53\n2 ANG MO KIO 4 ROOM      305       31\n3 ANG MO KIO 5 ROOM      154       16\n4 BEDOK      3 ROOM      555       44\n5 BEDOK      4 ROOM      462       36\n6 BEDOK      5 ROOM      253       20\n\n\n\n\n5.3.2 Proportion of flat types in Singapore\n\n\nShow the code\nplot_ly(flat_type_proportion, labels = ~flat_type, values = ~pct_flat, type = 'pie') %>% layout(title = 'Pie chart by flat types in Singapore in 2022',\n         xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),\n         yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))\n\n\n\n\n\n\nThe above chart shows, the top 1 proportion flat type is 4 Room, followed by 3 Room and 5 Room.\n\n\n5.3.4 Derive new varibles\n\n\nShow the code\nflat_type_number<- resale_prices_2022 %>% \n  group_by(town, flat_type) %>% \n  summarise(\n  \n    n=n())\n\nhead(flat_type_number)\n\n\n# A tibble: 6 × 3\n# Groups:   town [2]\n  town       flat_type     n\n  <chr>      <chr>     <int>\n1 ANG MO KIO 3 ROOM      528\n2 ANG MO KIO 4 ROOM      305\n3 ANG MO KIO 5 ROOM      154\n4 BEDOK      3 ROOM      555\n5 BEDOK      4 ROOM      462\n6 BEDOK      5 ROOM      253\n\n\n\n\n5.3.5 Numbers of flat types by planning areas in Singapore\n\n\nShow the code\nggplot(flat_type_number,aes(y = reorder(town,n),x = n,fill = flat_type))+\ngeom_bar(stat = 'identity')+\ncoord_cartesian(xlim = c(0,3000))+\nscale_fill_brewer(palette = \"RdBu\")+\nlabs(title = \"Number of flats by flat type and by planning area\",\n       x = \"Number of flats\",\n       y = \"Planning areas in Singapore\",\n       fill = \"flat_type\")\n\n\n\n\n\nFrom the above chart, we can see the top 3 areas which have most flats are SENGKANG, PUNGGOL and YISHUN."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#resale-prices-by-planning-areas",
    "href": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#resale-prices-by-planning-areas",
    "title": "Take-home Exercise 3",
    "section": "5.4 resale prices by planning areas",
    "text": "5.4 resale prices by planning areas\n\n5.4.1 Overview of resale prices by planning areas by months\n\n\nShow the code\nggplot(data = resale_prices_2022, aes(x = price_thousand, y = town, fill = after_stat(x))) +\n  \n  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +\n  \n  theme_minimal() +\n  \n  labs(title = 'Resale Prices by Planning Area in 2022, Month: {frame_time}') +\n  \n  theme(legend.position=\"none\",\n \n  plot.title = element_text(face = \"bold\", size = 12),\n  \n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10, angle = 360),\n  axis.text = element_text(size = 8)) +\n  \n  scale_fill_viridis(name = \"price_thousand\", option = \"D\") +\n  \n  transition_time(resale_prices_2022$Month) +\n  ease_aes('linear')\n\n\n\n\n\n\n\n5.4.2 Average resale prices by room type by planning areas\nVisualizing the uncertainty of point estimates\n\n\nShow the code\nprices_mean_by_town <- resale_prices_2022 %>% \n  group_by(town) %>% \n  summarise(\n    flat_type,\n    n=n(),\n    mean = round(mean(price_psm)),\n    sd=sd(price_psm))%>%\n \n  mutate(se=sd/sqrt(n-1))\n\n\n\n\nShow the code\nknitr::kable(head(prices_mean_by_town), format = 'html')\n\n\n\n\n \n  \n    town \n    flat_type \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    ANG MO KIO \n    3 ROOM \n    987 \n    5940 \n    1510.833 \n    48.11473 \n  \n  \n    ANG MO KIO \n    3 ROOM \n    987 \n    5940 \n    1510.833 \n    48.11473 \n  \n  \n    ANG MO KIO \n    3 ROOM \n    987 \n    5940 \n    1510.833 \n    48.11473 \n  \n  \n    ANG MO KIO \n    3 ROOM \n    987 \n    5940 \n    1510.833 \n    48.11473 \n  \n  \n    ANG MO KIO \n    3 ROOM \n    987 \n    5940 \n    1510.833 \n    48.11473 \n  \n  \n    ANG MO KIO \n    3 ROOM \n    987 \n    5940 \n    1510.833 \n    48.11473 \n  \n\n\n\n\n\n:::panel-tabset ### 3 Room\n\n\nShow the code\ntype <- '3 ROOM'\nprices_by_town <- resale_prices_2022 %>% filter(flat_type==type) %>% group_by(town)  \nggplot(prices_by_town, aes(x=reorder(town, price_psm), y=price_psm, color = flat_type)) +\n  geom_boxplot() +\n  labs(title=\"Flat Resale Price (psm) by Town for 3 Room \", \n       x=\"Town\", \n       y=\"Resale Price ($ psm)\") +\n  theme_classic() +\n  theme(plot.title = element_text(size=16, hjust=0.5),\n        axis.title.x = element_text(size=15),\n        axis.text.x = element_text(angle=45, hjust=1),\n        axis.title.y = element_text(size=15))  \n\n\n\n\n\nShow the code\nprices_mean_by_town%>% \n  filter(flat_type==type) \n\n\n# A tibble: 6,345 × 6\n# Groups:   town [26]\n   town       flat_type     n  mean    sd    se\n   <chr>      <chr>     <int> <dbl> <dbl> <dbl>\n 1 ANG MO KIO 3 ROOM      987  5940 1511.  48.1\n 2 ANG MO KIO 3 ROOM      987  5940 1511.  48.1\n 3 ANG MO KIO 3 ROOM      987  5940 1511.  48.1\n 4 ANG MO KIO 3 ROOM      987  5940 1511.  48.1\n 5 ANG MO KIO 3 ROOM      987  5940 1511.  48.1\n 6 ANG MO KIO 3 ROOM      987  5940 1511.  48.1\n 7 ANG MO KIO 3 ROOM      987  5940 1511.  48.1\n 8 ANG MO KIO 3 ROOM      987  5940 1511.  48.1\n 9 ANG MO KIO 3 ROOM      987  5940 1511.  48.1\n10 ANG MO KIO 3 ROOM      987  5940 1511.  48.1\n# … with 6,335 more rows\n\n\nShow the code\nggplot(prices_mean_by_town) +\n  geom_errorbar(\n    aes(x=reorder(town,mean), \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=1.5) +\n  geom_point(aes\n           (x=town, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n\n  theme_classic() +\n  theme(plot.title = element_text(size=16, hjust=0.5),\n        axis.title.x = element_text(size=12),\n        axis.text.x = element_text(angle=60, hjust=1),\n        axis.title.y = element_text(size=12)) + \n  ggtitle(\"Standard error of 3 Room prices_mean_by_town\")\n\n\n\n\n\nShow the code\nggarrange(prices_by_town, prices_mean_by_town,ncol = 1, nrow =2 )\n\n\n\n\n\nThe above charts are showing CENTRAL AREA, QUEENSTOWN and KALANG are the top 3 areas which have the higest mean price with 90% of confidence interval. ### 4 Room\n\n\nShow the code\ntype <- '4 ROOM'\nprices_by_town <- resale_prices_2022 %>% filter(flat_type==type) %>% group_by(town)  \nggplot(prices_by_town, aes(x=reorder(town, price_psm), y=price_psm, color = flat_type)) +\n  geom_boxplot() +\n  labs(title=\"Flat Resale Price (psm) by Town for 4 Room \", \n       x=\"Town\", \n       y=\"Resale Price ($ psm)\") +\n  theme_classic() +\n  theme(plot.title = element_text(size=16, hjust=0.5),\n        axis.title.x = element_text(size=15),\n        axis.text.x = element_text(angle=45, hjust=1),\n        axis.title.y = element_text(size=15))  \n\n\n\n\n\nShow the code\nprices_mean_by_town%>% \n  filter(flat_type==type) \n\n\n# A tibble: 11,311 × 6\n# Groups:   town [26]\n   town       flat_type     n  mean    sd    se\n   <chr>      <chr>     <int> <dbl> <dbl> <dbl>\n 1 ANG MO KIO 4 ROOM      987  5940 1511.  48.1\n 2 ANG MO KIO 4 ROOM      987  5940 1511.  48.1\n 3 ANG MO KIO 4 ROOM      987  5940 1511.  48.1\n 4 ANG MO KIO 4 ROOM      987  5940 1511.  48.1\n 5 ANG MO KIO 4 ROOM      987  5940 1511.  48.1\n 6 ANG MO KIO 4 ROOM      987  5940 1511.  48.1\n 7 ANG MO KIO 4 ROOM      987  5940 1511.  48.1\n 8 ANG MO KIO 4 ROOM      987  5940 1511.  48.1\n 9 ANG MO KIO 4 ROOM      987  5940 1511.  48.1\n10 ANG MO KIO 4 ROOM      987  5940 1511.  48.1\n# … with 11,301 more rows\n\n\nShow the code\nggplot(prices_mean_by_town) +\n  geom_errorbar(\n    aes(x=reorder(town,mean), \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=1.5) +\n  geom_point(aes\n           (x=town, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  theme_classic() +\n  theme(plot.title = element_text(size=16, hjust=0.5),\n        axis.title.x = element_text(size=12),\n        axis.text.x = element_text(angle=60, hjust=1),\n        axis.title.y = element_text(size=12)) + \n  ggtitle(\"Standard error of 4 Room prices_mean_by_town\")\n\n\n\n\n\nShow the code\nggarrange(prices_by_town, prices_mean_by_town,ncol = 1, nrow =2 )\n\n\n\n\n\nThe above charts are showing CENTRAL AREA, QUEENSTOWN and KALANG are the top 3 areas which have the higest mean price with 90% of confidence interval.\n\n\n5 Room\n\n\nShow the code\ntype <- '5 ROOM'\nprices_by_town <- resale_prices_2022 %>% filter(flat_type==type) %>% group_by(town)  \nggplot(prices_by_town, aes(x=reorder(town, price_psm), y=price_psm, color = flat_type)) +\n  geom_boxplot() +\n  labs(title=\"Flat Resale Price (psm) by Town for 5 Room \", \n       x=\"Town\", \n       y=\"Resale Price ($ psm)\") +\n  theme_classic() +\n  theme(plot.title = element_text(size=16, hjust=0.5),\n        axis.title.x = element_text(size=15),\n        axis.text.x = element_text(angle=45, hjust=1),\n        axis.title.y = element_text(size=15))  \n\n\n\n\n\nShow the code\nprices_mean_by_town%>% \n  filter(flat_type==type) \n\n\n# A tibble: 6,716 × 6\n# Groups:   town [26]\n   town       flat_type     n  mean    sd    se\n   <chr>      <chr>     <int> <dbl> <dbl> <dbl>\n 1 ANG MO KIO 5 ROOM      987  5940 1511.  48.1\n 2 ANG MO KIO 5 ROOM      987  5940 1511.  48.1\n 3 ANG MO KIO 5 ROOM      987  5940 1511.  48.1\n 4 ANG MO KIO 5 ROOM      987  5940 1511.  48.1\n 5 ANG MO KIO 5 ROOM      987  5940 1511.  48.1\n 6 ANG MO KIO 5 ROOM      987  5940 1511.  48.1\n 7 ANG MO KIO 5 ROOM      987  5940 1511.  48.1\n 8 ANG MO KIO 5 ROOM      987  5940 1511.  48.1\n 9 ANG MO KIO 5 ROOM      987  5940 1511.  48.1\n10 ANG MO KIO 5 ROOM      987  5940 1511.  48.1\n# … with 6,706 more rows\n\n\nShow the code\nggplot(prices_mean_by_town) +\n  geom_errorbar(\n    aes(x=reorder(town,mean), \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=1.5) +\n  geom_point(aes\n           (x=town, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n\n  theme_classic() +\n  theme(plot.title = element_text(size=16, hjust=0.5),\n        axis.title.x = element_text(size=12),\n        axis.text.x = element_text(angle=60, hjust=1),\n        axis.title.y = element_text(size=12)) + \n  ggtitle(\"Standard error of 5 Room prices_mean_by_town\")\n\n\n\n\n\nShow the code\nggarrange(prices_by_town, prices_mean_by_town,ncol = 1, nrow =2 )\n\n\n\n\n\nThe above charts are showing CENTRAL AREA, QUEENSTOWN and KALANG are the top 3 areas which have the higest mean price with 90% of confidence interval."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#resale-price-by-remaining_lease_year",
    "href": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#resale-price-by-remaining_lease_year",
    "title": "Take-home Exercise 3",
    "section": "5.5 Resale price by remaining_lease_year",
    "text": "5.5 Resale price by remaining_lease_year\n::: panel-tabset ### 3 Room\n\n\nShow the code\ntype <- \"3 ROOM\"\nggscatterstats(\n data = resale_prices_2022 %>% filter(flat_type==type),\nx = remaining_lease_years,\ny = price_thousand,\nmarginal = FALSE)+\n  theme_minimal() +\n  labs(title=paste(\"Correlation of Resale Price and Remaining_lease_years\", lapply(type, tolower), \"flats\"), x=\"Remaining_lease_years\", y=\"Resale Price (in thousand)\", fill=\"Resale Price (in thousand)\")+\ntheme(\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12, face = \"bold\"))\n\n\n\n\n\nThe above chart show the higher remaining lease years, the higher unit price. The coefficient is 0.61 which suggests there is a slight correlation.\n\n4 Room\n\n\nShow the code\ntype <- '4 ROOM'\nggscatterstats(\n data = resale_prices_2022 %>% filter(flat_type==type),\nx = remaining_lease_years,\ny = price_thousand,\nmarginal = FALSE) +\n  theme_minimal() +\n  labs(title=paste(\"Correlation of Resale Price and Remaining_lease_years\", lapply(type, tolower), \"flats\"), x=\"Remaining_lease_years\", y=\"Resale Price (in thousand)\", fill=\"Resale Price (in thousand)\")+\ntheme(\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12, face = \"bold\"))\n\n\n\n\n\nThe above chart show the higher remaining lease years, the higher unit price. The coefficient is 0.41 which suggests correlation is not strong.\n\n\n5 Room\n\n\nShow the code\ntype <- '5 ROOM'\nggscatterstats(\n data = resale_prices_2022 %>% filter(flat_type==type),\nx = remaining_lease_years,\ny = price_thousand,\nmarginal = FALSE) +\n  theme_minimal() +\n  labs(title=paste(\"Correlation of Resale Price and Remaining_lease_years\", lapply(type, tolower), \"flats\"), x=\"Remaining_lease_years\", y=\"Resale Price (in thousand)\", fill=\"Resale Price (in thousand)\")+\ntheme(\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12, face = \"bold\"))\n\n\n\n\n\nThe above chart show the higher remaining lease years, the higher unit price. The coefficient is 0.18 which suggests correlation is not strong."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#resale-prices-by-floor_area_sqm",
    "href": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#resale-prices-by-floor_area_sqm",
    "title": "Take-home Exercise 3",
    "section": "5.6 Resale prices by floor_area_sqm",
    "text": "5.6 Resale prices by floor_area_sqm\n::: panel-tabset ### 3 Room\n\n\nShow the code\ntype <- '3 ROOM'\nggscatterstats(\n data = resale_prices_2022 %>% filter(flat_type==type),\nx = floor_area_sqm,\ny = price_thousand,\nmarginal = FALSE) +\n  theme_minimal() +\n  labs(title=paste(\"Correlation of Resale Price and floor_area_sqm\", lapply(type, tolower), \"flats\"), x=\"floor_area_sqm\", y=\"Resale Price (in thousand)\", fill=\"Resale Price (psm)\")+\ntheme(\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12, face = \"bold\"))\n\n\n\n\n\nThe above chart show the higher remaining lease years, the higher unit price. The coefficient is 0.25 which suggests correlation is not strong.\n\n4 Room\n\n\nShow the code\ntype <- '4 ROOM'\nggscatterstats(\n data = resale_prices_2022 %>% filter(flat_type==type),\nx = floor_area_sqm,\ny = price_thousand,\nmarginal = FALSE) +\n  theme_minimal() +\n  labs(title=paste(\"Correlation of Resale Price (psm) and floor_area_sqm\", lapply(type, tolower), \"flats\"), x=\"floor_area_sqm\", y=\"Resale Price (in thousand)\", fill=\"Resale Price (in thousand)\")+\ntheme(\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12, face = \"bold\"))\n\n\n\n\n\nThe above chart show the higher remaining lease years, the higher unit price. The coefficient is -0.05 which suggests correlation is not strong.\n\n\nShow the code\ntype <- '5 ROOM'\nggscatterstats(\n data = resale_prices_2022 %>% filter(flat_type==type),\nx = floor_area_sqm,\ny = price_thousand,\nmarginal = FALSE) +\n  \n  theme_minimal() +\n  \n  labs(title=paste(\"Correlation of Resale Price (psm) and floor_area_sqm\", lapply(type, tolower), \"flats\"), x=\"floor_area_sqm\", y=\"Resale Price ($ psm)\", fill=\"Resale Price (psm)\")+\ntheme(\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12, face = \"bold\"))\n\n\n\n\n\nThe above chart show the higher remaining lease years, the higher unit price. The coefficient is 0.02 which suggests correlation is not strong."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#resalse-price-by-timesale-months",
    "href": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#resalse-price-by-timesale-months",
    "title": "Take-home Exercise 3",
    "section": "5.7 resalse price by time(sale months)",
    "text": "5.7 resalse price by time(sale months)\n::: panel-tabset ### 3 Room\n\n\nShow the code\ntype <- '3 ROOM'\nna.omit(resale_prices_2022) %>% \n  filter(flat_type == type) %>% \n  ggplot(aes(x = flat_type, y = price_thousand)) +\n  \n  geom_boxplot(aes(fill = as.factor(Month)), color = \"grey\") +\n  \n  stat_summary(fun = \"mean\", geom = \"point\", color = \"black\") +\n  \n  theme_minimal() +\n  \n  scale_fill_brewer(palette = \"Paired\") +\n\n labs( title = \"Monthly Resale prices by Flat Types\",\n       y = \"Resale price (in thousand)\",\n       x = \"Flat Type\",\n       fill = \"Month\") +theme_classic()+\n\ntheme(\n        plot.title = element_text(hjust = 0.5, size = 12, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title.x = element_text(hjust = 0.5, size = 12, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 12, face = \"bold\"))\n\n\n\n\n\nThe above chart shows there is no significant increasing or decreasing trend of resale price over months.\n\n4 Room\n\n\nShow the code\ntype <- '4 ROOM'\nna.omit(resale_prices_2022) %>% \n  filter(flat_type == type) %>% \n  ggplot(aes(x = flat_type, y = price_thousand)) +\n  \n  geom_boxplot(aes(fill = as.factor(Month)), color = \"grey\") +\n  \n  stat_summary(fun = \"mean\", geom = \"point\", color = \"black\") +\n  \n  theme_minimal() +\n  \n  scale_fill_brewer(palette = \"Paired\") +\n\n labs( title = \"Monthly Resale prices by Flat Types\",\n       y = \"Resale price (in thousand)\",\n       x = \"Flat Type\",\n       fill = \"Month\") +theme_classic()+\n\ntheme(\n        plot.title = element_text(hjust = 0.5, size = 12, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title.x = element_text(hjust = 0.5, size = 12, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 12, face = \"bold\"))\n\n\n\n\n\nThe above chart shows there is no significant increasing or decreasing trend of resale price over months.\n\n\n5 Room\n\n\nShow the code\ntype <- '5 ROOM'\nna.omit(resale_prices_2022) %>% \n  filter(flat_type == type) %>% \n  ggplot(aes(x = flat_type, y = price_thousand)) +\n  \n  geom_boxplot(aes(fill = as.factor(Month)), color = \"grey\") +\n  \n  stat_summary(fun = \"mean\", geom = \"point\", color = \"black\") +\n  \n  theme_minimal() +\n  \n  scale_fill_brewer(palette = \"Paired\") +\n\n labs( title = \"Monthly Resale prices by Flat Types\",\n       y = \"Resale price (in thousand)\",\n       x = \"Flat Type\",\n       fill = \"Month\") +theme_classic()+\n\ntheme(\n        plot.title = element_text(hjust = 0.5, size = 12, face = 'bold'),\n        plot.margin = margin(20, 20, 20, 20),\n        legend.position = \"bottom\",\n        \n        axis.text = element_text(size = 10, face = \"bold\"),\n        axis.title.x = element_text(hjust = 0.5, size = 12, face = \"bold\"),\n        axis.title.y = element_text(hjust = 0.5, size = 12, face = \"bold\"))\n\n\n\n\n\nThe above chart shows there is no significant increasing or decreasing trend of resale price over months."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#resale-price-by-storey_range",
    "href": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#resale-price-by-storey_range",
    "title": "Take-home Exercise 3",
    "section": "5.7 Resale price by storey_range",
    "text": "5.7 Resale price by storey_range\n\nTreemap\n\n\nShow the code\n#treemap  \n\ntreemap_storey <- treemap (resale_prices_2022,\n        index= c(\"flat_type\", \"town\"),\n        vSize= \"price_thousand\",\n        vColor = \"storey_range\",\n        type=\"categorical\",\n        palette = \"Blues\",\n        title=\"Resale price by storey_range\",\n        title.legend = \"Price_thousand\"\n        )\n\n\n\n\n\nThe above chart shows: For 3 Room flat type, the unit prices are higher at YISHUN, ANG MIAO KIAO, BEDOK, storey ranging from 04-06 to 07-09. For 4 Room flat type, the unit prices are higher at SENGKANG, PUNGGOL, YISHUN, storey ranging from 07-09, 10-12 to 13-15. For 5 Room flat type, the unit prices are higher at SENGKANG, PUNGGOL, JURONG WEST, storey ranging from 07-09, 10-12 to 13-15."
  },
  {
    "objectID": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#summary-of-insights",
    "href": "Take-home Exercise/Take-home Exercise 3/Take-home Exercise 3.html#summary-of-insights",
    "title": "Take-home Exercise 3",
    "section": "6.0 Summary of insights",
    "text": "6.0 Summary of insights\nFinding 1 - Geography Overall, the top 1 proportion flat type is 4 Room, followed by 3 Room and 5 Room in Singapore in 2022. When looking at the numbers of flats, we can see that SENGKANG, PUNGGOL and YISHUN have the most of the flats of all flat types.This could be seen in section 5.3 Proportion and absolute numbers of flat types in Singapore.\nLocation had a great effect on flat resale prices. Generally, the CENTRAL AREA had the most expensive flats by mean price per square meter followed by QUEENSTOWN and KALLANG. This could be seen from the box plots and uncertainty of point estimates in section 5.4.2 Average resale prices by room type by planning areas.\nFinding 2 - Resale price and remaining lease year, floor area sqm, Time(months) Generally, there is no strong correlation between the unit price and remaining lease, unit price and floor area sqm. This could be seen in section 5.5 Resale price by remaining_lease_year and 5.6 Resale prices by floor_area_sqm.\nThere is no significant increasing or decreasing trend of resale price over months.This could be seen in section 5.7 resalse price by time(sale months).\nFinding 3 - Resale price by storey_range For 3 Room flat type, the unit prices are higher at YISHUN, ANG MIAO KIAO, BEDOK, storey ranging from 04-06 to 07-09. For 4 Room flat type, the unit prices are higher at SENGKANG, PUNGGOL, YISHUN, storey ranging from 07-09, 10-12 to 13-15. For 5 Room flat type, the unit prices are higher at SENGKANG, PUNGGOL, JURONG WEST, storey ranging from 07-09, 10-12 to 13-15. This could be seen in section 5.7 Resale price by storey_range."
  }
]